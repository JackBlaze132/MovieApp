# Nombre del pipeline
name: 'CI-Pipeline-SpringBoot'

# Configuración del pool de agentes (self-hosted)
pool:
  name: 'Self-hosted'

# Disparador para ejecutar el pipeline cuando se hagan cambios en la rama master
trigger:
  branches:
    include:
      - master  # Cambia a "main" si tu rama principal se llama "main"

# Definición de las etapas y pasos
steps:
  # Paso 1: Comprobar la versión de Java y Maven
  - script: |
      java -version
      mvn -v
    displayName: 'Verificar Java y Maven'

  # Paso 2: Instalar dependencias con Maven y compilar sin ejecutar pruebas
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'  # Asegúrate de que esta ruta apunte al archivo POM en tu proyecto
      goals: 'clean install -DskipTests'
    displayName: 'Instalar dependencias y compilar con Maven (sin ejecutar pruebas)'

  # Paso 4: Empaquetar el proyecto (opcional)
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'package -DskipTests'
    displayName: 'Empaquetar el proyecto con Maven (sin ejecutar pruebas)'

  # Paso 5: Publicar el artefacto generado (.jar)
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/target/MovieApp-0.0.1-SNAPSHOT.jar'  # Apunta a la ruta correcta del .jar
      artifact: 'drop'
    displayName: 'Publicar artefacto .jar'
